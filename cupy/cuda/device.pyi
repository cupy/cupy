from typing import Any
from typing_extensions import Self

def get_device_id() -> int: ...
def get_cublas_handle() -> int: ...
def get_cusolver_handle() -> int: ...
def get_cusolver_sp_handle() -> int: ...
def get_cusparse_handle() -> int: ...
def get_compute_capability() -> str: ...

class Device:
    id: int

    def __init__(self, device: int | None = ...) -> None: ...
    @classmethod
    def from_pci_bus_id(cls, pci_bus_id: str) -> Self: ...
    def __int__(self) -> int: ...
    def __enter__(self) -> Self: ...
    def __exit__(self, *args: object) -> None: ...
    def use(self) -> Self: ...
    def synchronize(self) -> None: ...
    def compute_capability(self) -> str: ...
    @property
    def cublas_handle(self) -> int: ...
    @property
    def cusolver_handle(self) -> int: ...
    @property
    def cusolver_sp_handle(self) -> int: ...
    @property
    def cusparse_handle(self) -> int: ...
    @property
    def mem_info(self) -> tuple[int, int]: ...
    @property
    def attributes(self) -> dict[str, Any]: ...
    @property
    def pci_bus_id(self) -> str: ...

def from_pointer(ptr: int) -> Device: ...
