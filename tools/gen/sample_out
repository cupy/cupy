# This code was automatically generated. Do not modify it directly.

cimport cython  # NOQA

cdef extern from '../cupy_cusparse.h' nogil:
    Status cusparseCreate(Handle *handle)
    Status cusparseDestroy(Handle handle)
    Status cusparseGetVersion(Handle handle, int *version)
    Status cusparseSetStream(Handle handle, cudaStream_t streamId)
    Status cusparseGetStream(Handle handle, cudaStream_t *streamId)
    Status cusparseGetPointerMode(Handle handle, PointerMode *mode)
    Status cusparseSetPointerMode(Handle handle, PointerMode mode)
    Status cusparseCreateMatDescr(MatDescr *descrA)
    Status cusparseDestroyMatDescr(MatDescr descrA)
    Status cusparseSetMatType(MatDescr descrA, MatrixType type)
    MatrixType cusparseGetMatType(const MatDescr descrA)
    Status cusparseSetMatFillMode(MatDescr descrA, FillMode fillMode)
    FillMode cusparseGetMatFillMode(const MatDescr descrA)
    Status cusparseSetMatDiagType(MatDescr descrA, DiagType diagType)
    DiagType cusparseGetMatDiagType(const MatDescr descrA)
    Status cusparseSetMatIndexBase(MatDescr descrA, IndexBase base)
    IndexBase cusparseGetMatIndexBase(const MatDescr descrA)
    Status cusparseSaxpyi(Handle handle, int nnz, const float *alpha, const float *xVal, const int *xInd, float *y, IndexBase idxBase)
    Status cusparseDaxpyi(Handle handle, int nnz, const double *alpha, const double *xVal, const int *xInd, double *y, IndexBase idxBase)
    Status cusparseCaxpyi(Handle handle, int nnz, const cuComplex *alpha, const cuComplex *xVal, const int *xInd, cuComplex *y, IndexBase idxBase)
    Status cusparseZaxpyi(Handle handle, int nnz, const cuDoubleComplex *alpha, const cuDoubleComplex *xVal, const int *xInd, cuDoubleComplex *y, IndexBase idxBase)
    Status cusparseSgthr(Handle handle, int nnz, const float *y, float *xVal, const int *xInd, IndexBase idxBase)
    Status cusparseDgthr(Handle handle, int nnz, const double *y, double *xVal, const int *xInd, IndexBase idxBase)
    Status cusparseCgthr(Handle handle, int nnz, const cuComplex *y, cuComplex *xVal, const int *xInd, IndexBase idxBase)
    Status cusparseZgthr(Handle handle, int nnz, const cuDoubleComplex *y, cuDoubleComplex *xVal, const int *xInd, IndexBase idxBase)
    Status cusparseSgthrz(Handle handle, int nnz, float *y, float *xVal, const int *xInd, IndexBase idxBase)
    Status cusparseDgthrz(Handle handle, int nnz, double *y, double *xVal, const int *xInd, IndexBase idxBase)
    Status cusparseCgthrz(Handle handle, int nnz, cuComplex *y, cuComplex *xVal, const int *xInd, IndexBase idxBase)
    Status cusparseZgthrz(Handle handle, int nnz, cuDoubleComplex *y, cuDoubleComplex *xVal, const int *xInd, IndexBase idxBase)
    Status cusparseSsctr(Handle handle, int nnz, const float *xVal, const int *xInd, float *y, IndexBase idxBase)
    Status cusparseDsctr(Handle handle, int nnz, const double *xVal, const int *xInd, double *y, IndexBase idxBase)
    Status cusparseCsctr(Handle handle, int nnz, const cuComplex *xVal, const int *xInd, cuComplex *y, IndexBase idxBase)
    Status cusparseZsctr(Handle handle, int nnz, const cuDoubleComplex *xVal, const int *xInd, cuDoubleComplex *y, IndexBase idxBase)
    Status cusparseSbsrmv(Handle handle, Direction dirA, Operation transA, int mb, int nb, int nnzb, const float *alpha, const MatDescr descrA, const float *bsrSortedValA, const int *bsrSortedRowPtrA, const int *bsrSortedColIndA, int blockDim, const float *x, const float *beta, float *y)
    Status cusparseDbsrmv(Handle handle, Direction dirA, Operation transA, int mb, int nb, int nnzb, const double *alpha, const MatDescr descrA, const double *bsrSortedValA, const int *bsrSortedRowPtrA, const int *bsrSortedColIndA, int blockDim, const double *x, const double *beta, double *y)
    Status cusparseCbsrmv(Handle handle, Direction dirA, Operation transA, int mb, int nb, int nnzb, const cuComplex *alpha, const MatDescr descrA, const cuComplex *bsrSortedValA, const int *bsrSortedRowPtrA, const int *bsrSortedColIndA, int blockDim, const cuComplex *x, const cuComplex *beta, cuComplex *y)
    Status cusparseZbsrmv(Handle handle, Direction dirA, Operation transA, int mb, int nb, int nnzb, const cuDoubleComplex *alpha, const MatDescr descrA, const cuDoubleComplex *bsrSortedValA, const int *bsrSortedRowPtrA, const int *bsrSortedColIndA, int blockDim, const cuDoubleComplex *x, const cuDoubleComplex *beta, cuDoubleComplex *y)
    Status cusparseSbsrxmv(Handle handle, Direction dirA, Operation transA, int sizeOfMask, int mb, int nb, int nnzb, const float *alpha, const MatDescr descrA, const float *bsrSortedValA, const int *bsrSortedMaskPtrA, const int *bsrSortedRowPtrA, const int *bsrSortedEndPtrA, const int *bsrSortedColIndA, int blockDim, const float *x, const float *beta, float *y)
    Status cusparseDbsrxmv(Handle handle, Direction dirA, Operation transA, int sizeOfMask, int mb, int nb, int nnzb, const double *alpha, const MatDescr descrA, const double *bsrSortedValA, const int *bsrSortedMaskPtrA, const int *bsrSortedRowPtrA, const int *bsrSortedEndPtrA, const int *bsrSortedColIndA, int blockDim, const double *x, const double *beta, double *y)
    Status cusparseCbsrxmv(Handle handle, Direction dirA, Operation transA, int sizeOfMask, int mb, int nb, int nnzb, const cuComplex *alpha, const MatDescr descrA, const cuComplex *bsrSortedValA, const int *bsrSortedMaskPtrA, const int *bsrSortedRowPtrA, const int *bsrSortedEndPtrA, const int *bsrSortedColIndA, int blockDim, const cuComplex *x, const cuComplex *beta, cuComplex *y)
    Status cusparseZbsrxmv(Handle handle, Direction dirA, Operation transA, int sizeOfMask, int mb, int nb, int nnzb, const cuDoubleComplex *alpha, const MatDescr descrA, const cuDoubleComplex *bsrSortedValA, const int *bsrSortedMaskPtrA, const int *bsrSortedRowPtrA, const int *bsrSortedEndPtrA, const int *bsrSortedColIndA, int blockDim, const cuDoubleComplex *x, const cuDoubleComplex *beta, cuDoubleComplex *y)
    Status cusparseSbsrmm(Handle handle, Direction dirA, Operation transA, Operation transB, int mb, int n, int kb, int nnzb, const float *alpha, const MatDescr descrA, const float *bsrSortedValA, const int *bsrSortedRowPtrA, const int *bsrSortedColIndA, const int blockSize, const float *B, const int ldb, const float *beta, float *C, int ldc)
    Status cusparseDbsrmm(Handle handle, Direction dirA, Operation transA, Operation transB, int mb, int n, int kb, int nnzb, const double *alpha, const MatDescr descrA, const double *bsrSortedValA, const int *bsrSortedRowPtrA, const int *bsrSortedColIndA, const int blockSize, const double *B, const int ldb, const double *beta, double *C, int ldc)
    Status cusparseCbsrmm(Handle handle, Direction dirA, Operation transA, Operation transB, int mb, int n, int kb, int nnzb, const cuComplex *alpha, const MatDescr descrA, const cuComplex *bsrSortedValA, const int *bsrSortedRowPtrA, const int *bsrSortedColIndA, const int blockSize, const cuComplex *B, const int ldb, const cuComplex *beta, cuComplex *C, int ldc)
    Status cusparseZbsrmm(Handle handle, Direction dirA, Operation transA, Operation transB, int mb, int n, int kb, int nnzb, const cuDoubleComplex *alpha, const MatDescr descrA, const cuDoubleComplex *bsrSortedValA, const int *bsrSortedRowPtrA, const int *bsrSortedColIndA, const int blockSize, const cuDoubleComplex *B, const int ldb, const cuDoubleComplex *beta, cuDoubleComplex *C, int ldc)
    Status cusparseXcsric02_zeroPivot(Handle handle, csric02Info_t info, int *position)
    Status cusparseScsric02_bufferSize(Handle handle, int m, int nnz, const MatDescr descrA, float *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, int *pBufferSizeInBytes)
    Status cusparseDcsric02_bufferSize(Handle handle, int m, int nnz, const MatDescr descrA, double *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, int *pBufferSizeInBytes)
    Status cusparseCcsric02_bufferSize(Handle handle, int m, int nnz, const MatDescr descrA, cuComplex *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, int *pBufferSizeInBytes)
    Status cusparseZcsric02_bufferSize(Handle handle, int m, int nnz, const MatDescr descrA, cuDoubleComplex *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, int *pBufferSizeInBytes)
    Status cusparseScsric02_analysis(Handle handle, int m, int nnz, const MatDescr descrA, const float *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, SolvePolicy policy, void *pBuffer)
    Status cusparseDcsric02_analysis(Handle handle, int m, int nnz, const MatDescr descrA, const double *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, SolvePolicy policy, void *pBuffer)
    Status cusparseCcsric02_analysis(Handle handle, int m, int nnz, const MatDescr descrA, const cuComplex *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, SolvePolicy policy, void *pBuffer)
    Status cusparseZcsric02_analysis(Handle handle, int m, int nnz, const MatDescr descrA, const cuDoubleComplex *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, SolvePolicy policy, void *pBuffer)
    Status cusparseScsric02(Handle handle, int m, int nnz, const MatDescr descrA, float *csrSortedValA_valM, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, SolvePolicy policy, void *pBuffer)
    Status cusparseDcsric02(Handle handle, int m, int nnz, const MatDescr descrA, double *csrSortedValA_valM, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, SolvePolicy policy, void *pBuffer)
    Status cusparseCcsric02(Handle handle, int m, int nnz, const MatDescr descrA, cuComplex *csrSortedValA_valM, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, SolvePolicy policy, void *pBuffer)
    Status cusparseZcsric02(Handle handle, int m, int nnz, const MatDescr descrA, cuDoubleComplex *csrSortedValA_valM, const int *csrSortedRowPtrA, const int *csrSortedColIndA, csric02Info_t info, SolvePolicy policy, void *pBuffer)
    Status cusparseScsrgeam2_bufferSizeExt(Handle handle, int m, int n, const float *alpha, const MatDescr descrA, int nnzA, const float *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, const float *beta, const MatDescr descrB, int nnzB, const float *csrSortedValB, const int *csrSortedRowPtrB, const int *csrSortedColIndB, const MatDescr descrC, const float *csrSortedValC, const int *csrSortedRowPtrC, const int *csrSortedColIndC, size_t *pBufferSizeInBytes)
    Status cusparseDcsrgeam2_bufferSizeExt(Handle handle, int m, int n, const double *alpha, const MatDescr descrA, int nnzA, const double *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, const double *beta, const MatDescr descrB, int nnzB, const double *csrSortedValB, const int *csrSortedRowPtrB, const int *csrSortedColIndB, const MatDescr descrC, const double *csrSortedValC, const int *csrSortedRowPtrC, const int *csrSortedColIndC, size_t *pBufferSizeInBytes)
    Status cusparseCcsrgeam2_bufferSizeExt(Handle handle, int m, int n, const cuComplex *alpha, const MatDescr descrA, int nnzA, const cuComplex *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, const cuComplex *beta, const MatDescr descrB, int nnzB, const cuComplex *csrSortedValB, const int *csrSortedRowPtrB, const int *csrSortedColIndB, const MatDescr descrC, const cuComplex *csrSortedValC, const int *csrSortedRowPtrC, const int *csrSortedColIndC, size_t *pBufferSizeInBytes)
    Status cusparseZcsrgeam2_bufferSizeExt(Handle handle, int m, int n, const cuDoubleComplex *alpha, const MatDescr descrA, int nnzA, const cuDoubleComplex *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, const cuDoubleComplex *beta, const MatDescr descrB, int nnzB, const cuDoubleComplex *csrSortedValB, const int *csrSortedRowPtrB, const int *csrSortedColIndB, const MatDescr descrC, const cuDoubleComplex *csrSortedValC, const int *csrSortedRowPtrC, const int *csrSortedColIndC, size_t *pBufferSizeInBytes)
    Status cusparseScsrgeam2(Handle handle, int m, int n, const float *alpha, const MatDescr descrA, int nnzA, const float *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, const float *beta, const MatDescr descrB, int nnzB, const float *csrSortedValB, const int *csrSortedRowPtrB, const int *csrSortedColIndB, const MatDescr descrC, float *csrSortedValC, int *csrSortedRowPtrC, int *csrSortedColIndC, void *pBuffer)
    Status cusparseDcsrgeam2(Handle handle, int m, int n, const double *alpha, const MatDescr descrA, int nnzA, const double *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, const double *beta, const MatDescr descrB, int nnzB, const double *csrSortedValB, const int *csrSortedRowPtrB, const int *csrSortedColIndB, const MatDescr descrC, double *csrSortedValC, int *csrSortedRowPtrC, int *csrSortedColIndC, void *pBuffer)
    Status cusparseCcsrgeam2(Handle handle, int m, int n, const cuComplex *alpha, const MatDescr descrA, int nnzA, const cuComplex *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, const cuComplex *beta, const MatDescr descrB, int nnzB, const cuComplex *csrSortedValB, const int *csrSortedRowPtrB, const int *csrSortedColIndB, const MatDescr descrC, cuComplex *csrSortedValC, int *csrSortedRowPtrC, int *csrSortedColIndC, void *pBuffer)
    Status cusparseZcsrgeam2(Handle handle, int m, int n, const cuDoubleComplex *alpha, const MatDescr descrA, int nnzA, const cuDoubleComplex *csrSortedValA, const int *csrSortedRowPtrA, const int *csrSortedColIndA, const cuDoubleComplex *beta, const MatDescr descrB, int nnzB, const cuDoubleComplex *csrSortedValB, const int *csrSortedRowPtrB, const int *csrSortedColIndB, const MatDescr descrC, cuDoubleComplex *csrSortedValC, int *csrSortedRowPtrC, int *csrSortedColIndC, void *pBuffer)
    Status cusparseSdense2csr(Handle handle, int m, int n, const MatDescr descrA, const float *A, int lda, const int *nnzPerRow, float *csrSortedValA, int *csrSortedRowPtrA, int *csrSortedColIndA)
    Status cusparseDdense2csr(Handle handle, int m, int n, const MatDescr descrA, const double *A, int lda, const int *nnzPerRow, double *csrSortedValA, int *csrSortedRowPtrA, int *csrSortedColIndA)
    Status cusparseCdense2csr(Handle handle, int m, int n, const MatDescr descrA, const cuComplex *A, int lda, const int *nnzPerRow, cuComplex *csrSortedValA, int *csrSortedRowPtrA, int *csrSortedColIndA)
    Status cusparseZdense2csr(Handle handle, int m, int n, const MatDescr descrA, const cuDoubleComplex *A, int lda, const int *nnzPerRow, cuDoubleComplex *csrSortedValA, int *csrSortedRowPtrA, int *csrSortedColIndA)
    Status cusparseXcoo2csr(Handle handle, const int *cooRowInd, int nnz, int m, int *csrSortedRowPtr, IndexBase idxBase)
    Status cusparseXcoosortByRow(Handle handle, int m, int n, int nnz, int *cooRowsA, int *cooColsA, int *P, void *pBuffer)
    Status cusparseCreateSpVec(SpVecDescr *spVecDescr, int64_t size, int64_t nnz, void *indices, void *values, IndexType idxType, IndexBase idxBase, cudaDataType valueType)

cpdef intptr_t create():
    cdef Handle handle
    status = cusparseCreate(&handle)
    check_status(status)
    return <intptr_t>handle

cpdef destroy(intptr_t handle):
    status = cusparseDestroy(<Handle>handle)
    check_status(status)

cpdef int getVersion(intptr_t handle):
    cdef int version
    status = cusparseGetVersion(<Handle>handle, &version)
    check_status(status)
    return version

cpdef setStream(intptr_t handle, cudaStream_t streamId):
    status = cusparseSetStream(<Handle>handle, streamId)
    check_status(status)

cpdef cudaStream_t getStream(intptr_t handle):
    cdef cudaStream_t streamId
    status = cusparseGetStream(<Handle>handle, &streamId)
    check_status(status)
    return streamId

cpdef size_t getPointerMode(intptr_t handle):
    cdef PointerMode mode
    status = cusparseGetPointerMode(<Handle>handle, &mode)
    check_status(status)
    return <size_t>mode

cpdef setPointerMode(intptr_t handle, size_t mode):
    status = cusparseSetPointerMode(<Handle>handle, <PointerMode>mode)
    check_status(status)

cpdef size_t createMatDescr():
    cdef MatDescr descrA
    status = cusparseCreateMatDescr(&descrA)
    check_status(status)
    return <size_t>descrA

cpdef destroyMatDescr(size_t descrA):
    status = cusparseDestroyMatDescr(<MatDescr>descrA)
    check_status(status)

cpdef setMatType(size_t descrA, size_t type):
    status = cusparseSetMatType(<MatDescr>descrA, <MatrixType>type)
    check_status(status)

cpdef size_t getMatType(size_t descrA):
    return cusparseGetMatType(<const MatDescr>descrA)

cpdef setMatFillMode(size_t descrA, size_t fillMode):
    status = cusparseSetMatFillMode(<MatDescr>descrA, <FillMode>fillMode)
    check_status(status)

cpdef size_t getMatFillMode(size_t descrA):
    return cusparseGetMatFillMode(<const MatDescr>descrA)

cpdef setMatDiagType(size_t descrA, size_t diagType):
    status = cusparseSetMatDiagType(<MatDescr>descrA, <DiagType>diagType)
    check_status(status)

cpdef size_t getMatDiagType(size_t descrA):
    return cusparseGetMatDiagType(<const MatDescr>descrA)

cpdef setMatIndexBase(size_t descrA, size_t base):
    status = cusparseSetMatIndexBase(<MatDescr>descrA, <IndexBase>base)
    check_status(status)

cpdef size_t getMatIndexBase(size_t descrA):
    return cusparseGetMatIndexBase(<const MatDescr>descrA)

cpdef saxpyi(intptr_t handle, int nnz, size_t alpha, size_t xVal, size_t xInd, size_t y, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseSaxpyi(<Handle>handle, nnz, <const float *>alpha, <const float *>xVal, <const int *>xInd, <float *>y, <IndexBase>idxBase)
    check_status(status)

cpdef daxpyi(intptr_t handle, int nnz, size_t alpha, size_t xVal, size_t xInd, size_t y, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseDaxpyi(<Handle>handle, nnz, <const double *>alpha, <const double *>xVal, <const int *>xInd, <double *>y, <IndexBase>idxBase)
    check_status(status)

cpdef caxpyi(intptr_t handle, int nnz, size_t alpha, size_t xVal, size_t xInd, size_t y, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseCaxpyi(<Handle>handle, nnz, <const cuComplex *>alpha, <const cuComplex *>xVal, <const int *>xInd, <cuComplex *>y, <IndexBase>idxBase)
    check_status(status)

cpdef zaxpyi(intptr_t handle, int nnz, size_t alpha, size_t xVal, size_t xInd, size_t y, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseZaxpyi(<Handle>handle, nnz, <const cuDoubleComplex *>alpha, <const cuDoubleComplex *>xVal, <const int *>xInd, <cuDoubleComplex *>y, <IndexBase>idxBase)
    check_status(status)

cpdef sgthr(intptr_t handle, int nnz, size_t y, size_t xVal, size_t xInd, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseSgthr(<Handle>handle, nnz, <const float *>y, <float *>xVal, <const int *>xInd, <IndexBase>idxBase)
    check_status(status)

cpdef dgthr(intptr_t handle, int nnz, size_t y, size_t xVal, size_t xInd, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseDgthr(<Handle>handle, nnz, <const double *>y, <double *>xVal, <const int *>xInd, <IndexBase>idxBase)
    check_status(status)

cpdef cgthr(intptr_t handle, int nnz, size_t y, size_t xVal, size_t xInd, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseCgthr(<Handle>handle, nnz, <const cuComplex *>y, <cuComplex *>xVal, <const int *>xInd, <IndexBase>idxBase)
    check_status(status)

cpdef zgthr(intptr_t handle, int nnz, size_t y, size_t xVal, size_t xInd, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseZgthr(<Handle>handle, nnz, <const cuDoubleComplex *>y, <cuDoubleComplex *>xVal, <const int *>xInd, <IndexBase>idxBase)
    check_status(status)

cpdef sgthrz(intptr_t handle, int nnz, size_t y, size_t xVal, size_t xInd, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseSgthrz(<Handle>handle, nnz, <float *>y, <float *>xVal, <const int *>xInd, <IndexBase>idxBase)
    check_status(status)

cpdef dgthrz(intptr_t handle, int nnz, size_t y, size_t xVal, size_t xInd, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseDgthrz(<Handle>handle, nnz, <double *>y, <double *>xVal, <const int *>xInd, <IndexBase>idxBase)
    check_status(status)

cpdef cgthrz(intptr_t handle, int nnz, size_t y, size_t xVal, size_t xInd, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseCgthrz(<Handle>handle, nnz, <cuComplex *>y, <cuComplex *>xVal, <const int *>xInd, <IndexBase>idxBase)
    check_status(status)

cpdef zgthrz(intptr_t handle, int nnz, size_t y, size_t xVal, size_t xInd, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseZgthrz(<Handle>handle, nnz, <cuDoubleComplex *>y, <cuDoubleComplex *>xVal, <const int *>xInd, <IndexBase>idxBase)
    check_status(status)

cpdef ssctr(intptr_t handle, int nnz, size_t xVal, size_t xInd, size_t y, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseSsctr(<Handle>handle, nnz, <const float *>xVal, <const int *>xInd, <float *>y, <IndexBase>idxBase)
    check_status(status)

cpdef dsctr(intptr_t handle, int nnz, size_t xVal, size_t xInd, size_t y, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseDsctr(<Handle>handle, nnz, <const double *>xVal, <const int *>xInd, <double *>y, <IndexBase>idxBase)
    check_status(status)

cpdef csctr(intptr_t handle, int nnz, size_t xVal, size_t xInd, size_t y, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseCsctr(<Handle>handle, nnz, <const cuComplex *>xVal, <const int *>xInd, <cuComplex *>y, <IndexBase>idxBase)
    check_status(status)

cpdef zsctr(intptr_t handle, int nnz, size_t xVal, size_t xInd, size_t y, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseZsctr(<Handle>handle, nnz, <const cuDoubleComplex *>xVal, <const int *>xInd, <cuDoubleComplex *>y, <IndexBase>idxBase)
    check_status(status)

cpdef sbsrmv(intptr_t handle, size_t dirA, size_t transA, int mb, int nb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedRowPtrA, size_t bsrSortedColIndA, int blockDim, size_t x, size_t beta, size_t y):
    _setStream(get_handle_name(node))
    status = cusparseSbsrmv(<Handle>handle, <Direction>dirA, <Operation>transA, mb, nb, nnzb, <const float *>alpha, <const MatDescr>descrA, <const float *>bsrSortedValA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedColIndA, blockDim, <const float *>x, <const float *>beta, <float *>y)
    check_status(status)

cpdef dbsrmv(intptr_t handle, size_t dirA, size_t transA, int mb, int nb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedRowPtrA, size_t bsrSortedColIndA, int blockDim, size_t x, size_t beta, size_t y):
    _setStream(get_handle_name(node))
    status = cusparseDbsrmv(<Handle>handle, <Direction>dirA, <Operation>transA, mb, nb, nnzb, <const double *>alpha, <const MatDescr>descrA, <const double *>bsrSortedValA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedColIndA, blockDim, <const double *>x, <const double *>beta, <double *>y)
    check_status(status)

cpdef cbsrmv(intptr_t handle, size_t dirA, size_t transA, int mb, int nb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedRowPtrA, size_t bsrSortedColIndA, int blockDim, size_t x, size_t beta, size_t y):
    _setStream(get_handle_name(node))
    status = cusparseCbsrmv(<Handle>handle, <Direction>dirA, <Operation>transA, mb, nb, nnzb, <const cuComplex *>alpha, <const MatDescr>descrA, <const cuComplex *>bsrSortedValA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedColIndA, blockDim, <const cuComplex *>x, <const cuComplex *>beta, <cuComplex *>y)
    check_status(status)

cpdef zbsrmv(intptr_t handle, size_t dirA, size_t transA, int mb, int nb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedRowPtrA, size_t bsrSortedColIndA, int blockDim, size_t x, size_t beta, size_t y):
    _setStream(get_handle_name(node))
    status = cusparseZbsrmv(<Handle>handle, <Direction>dirA, <Operation>transA, mb, nb, nnzb, <const cuDoubleComplex *>alpha, <const MatDescr>descrA, <const cuDoubleComplex *>bsrSortedValA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedColIndA, blockDim, <const cuDoubleComplex *>x, <const cuDoubleComplex *>beta, <cuDoubleComplex *>y)
    check_status(status)

cpdef sbsrxmv(intptr_t handle, size_t dirA, size_t transA, int sizeOfMask, int mb, int nb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedMaskPtrA, size_t bsrSortedRowPtrA, size_t bsrSortedEndPtrA, size_t bsrSortedColIndA, int blockDim, size_t x, size_t beta, size_t y):
    _setStream(get_handle_name(node))
    status = cusparseSbsrxmv(<Handle>handle, <Direction>dirA, <Operation>transA, sizeOfMask, mb, nb, nnzb, <const float *>alpha, <const MatDescr>descrA, <const float *>bsrSortedValA, <const int *>bsrSortedMaskPtrA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedEndPtrA, <const int *>bsrSortedColIndA, blockDim, <const float *>x, <const float *>beta, <float *>y)
    check_status(status)

cpdef dbsrxmv(intptr_t handle, size_t dirA, size_t transA, int sizeOfMask, int mb, int nb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedMaskPtrA, size_t bsrSortedRowPtrA, size_t bsrSortedEndPtrA, size_t bsrSortedColIndA, int blockDim, size_t x, size_t beta, size_t y):
    _setStream(get_handle_name(node))
    status = cusparseDbsrxmv(<Handle>handle, <Direction>dirA, <Operation>transA, sizeOfMask, mb, nb, nnzb, <const double *>alpha, <const MatDescr>descrA, <const double *>bsrSortedValA, <const int *>bsrSortedMaskPtrA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedEndPtrA, <const int *>bsrSortedColIndA, blockDim, <const double *>x, <const double *>beta, <double *>y)
    check_status(status)

cpdef cbsrxmv(intptr_t handle, size_t dirA, size_t transA, int sizeOfMask, int mb, int nb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedMaskPtrA, size_t bsrSortedRowPtrA, size_t bsrSortedEndPtrA, size_t bsrSortedColIndA, int blockDim, size_t x, size_t beta, size_t y):
    _setStream(get_handle_name(node))
    status = cusparseCbsrxmv(<Handle>handle, <Direction>dirA, <Operation>transA, sizeOfMask, mb, nb, nnzb, <const cuComplex *>alpha, <const MatDescr>descrA, <const cuComplex *>bsrSortedValA, <const int *>bsrSortedMaskPtrA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedEndPtrA, <const int *>bsrSortedColIndA, blockDim, <const cuComplex *>x, <const cuComplex *>beta, <cuComplex *>y)
    check_status(status)

cpdef zbsrxmv(intptr_t handle, size_t dirA, size_t transA, int sizeOfMask, int mb, int nb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedMaskPtrA, size_t bsrSortedRowPtrA, size_t bsrSortedEndPtrA, size_t bsrSortedColIndA, int blockDim, size_t x, size_t beta, size_t y):
    _setStream(get_handle_name(node))
    status = cusparseZbsrxmv(<Handle>handle, <Direction>dirA, <Operation>transA, sizeOfMask, mb, nb, nnzb, <const cuDoubleComplex *>alpha, <const MatDescr>descrA, <const cuDoubleComplex *>bsrSortedValA, <const int *>bsrSortedMaskPtrA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedEndPtrA, <const int *>bsrSortedColIndA, blockDim, <const cuDoubleComplex *>x, <const cuDoubleComplex *>beta, <cuDoubleComplex *>y)
    check_status(status)

cpdef sbsrmm(intptr_t handle, size_t dirA, size_t transA, size_t transB, int mb, int n, int kb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedRowPtrA, size_t bsrSortedColIndA, const int blockSize, size_t B, const int ldb, size_t beta, size_t C, int ldc):
    _setStream(get_handle_name(node))
    status = cusparseSbsrmm(<Handle>handle, <Direction>dirA, <Operation>transA, <Operation>transB, mb, n, kb, nnzb, <const float *>alpha, <const MatDescr>descrA, <const float *>bsrSortedValA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedColIndA, blockSize, <const float *>B, ldb, <const float *>beta, <float *>C, ldc)
    check_status(status)

cpdef dbsrmm(intptr_t handle, size_t dirA, size_t transA, size_t transB, int mb, int n, int kb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedRowPtrA, size_t bsrSortedColIndA, const int blockSize, size_t B, const int ldb, size_t beta, size_t C, int ldc):
    _setStream(get_handle_name(node))
    status = cusparseDbsrmm(<Handle>handle, <Direction>dirA, <Operation>transA, <Operation>transB, mb, n, kb, nnzb, <const double *>alpha, <const MatDescr>descrA, <const double *>bsrSortedValA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedColIndA, blockSize, <const double *>B, ldb, <const double *>beta, <double *>C, ldc)
    check_status(status)

cpdef cbsrmm(intptr_t handle, size_t dirA, size_t transA, size_t transB, int mb, int n, int kb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedRowPtrA, size_t bsrSortedColIndA, const int blockSize, size_t B, const int ldb, size_t beta, size_t C, int ldc):
    _setStream(get_handle_name(node))
    status = cusparseCbsrmm(<Handle>handle, <Direction>dirA, <Operation>transA, <Operation>transB, mb, n, kb, nnzb, <const cuComplex *>alpha, <const MatDescr>descrA, <const cuComplex *>bsrSortedValA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedColIndA, blockSize, <const cuComplex *>B, ldb, <const cuComplex *>beta, <cuComplex *>C, ldc)
    check_status(status)

cpdef zbsrmm(intptr_t handle, size_t dirA, size_t transA, size_t transB, int mb, int n, int kb, int nnzb, size_t alpha, size_t descrA, size_t bsrSortedValA, size_t bsrSortedRowPtrA, size_t bsrSortedColIndA, const int blockSize, size_t B, const int ldb, size_t beta, size_t C, int ldc):
    _setStream(get_handle_name(node))
    status = cusparseZbsrmm(<Handle>handle, <Direction>dirA, <Operation>transA, <Operation>transB, mb, n, kb, nnzb, <const cuDoubleComplex *>alpha, <const MatDescr>descrA, <const cuDoubleComplex *>bsrSortedValA, <const int *>bsrSortedRowPtrA, <const int *>bsrSortedColIndA, blockSize, <const cuDoubleComplex *>B, ldb, <const cuDoubleComplex *>beta, <cuDoubleComplex *>C, ldc)
    check_status(status)

cpdef int xcsric02_zeroPivot(intptr_t handle, size_t info):
    cdef int position
    status = cusparseXcsric02_zeroPivot(<Handle>handle, <csric02Info_t>info, &position)
    check_status(status)
    return position

cpdef int scsric02_bufferSize(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info):
    cdef int bufferSizeInBytes
    _setStream(get_handle_name(node))
    status = cusparseScsric02_bufferSize(<Handle>handle, m, nnz, <const MatDescr>descrA, <float *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, &bufferSizeInBytes)
    check_status(status)
    return bufferSizeInBytes

cpdef int dcsric02_bufferSize(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info):
    cdef int bufferSizeInBytes
    _setStream(get_handle_name(node))
    status = cusparseDcsric02_bufferSize(<Handle>handle, m, nnz, <const MatDescr>descrA, <double *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, &bufferSizeInBytes)
    check_status(status)
    return bufferSizeInBytes

cpdef int ccsric02_bufferSize(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info):
    cdef int bufferSizeInBytes
    _setStream(get_handle_name(node))
    status = cusparseCcsric02_bufferSize(<Handle>handle, m, nnz, <const MatDescr>descrA, <cuComplex *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, &bufferSizeInBytes)
    check_status(status)
    return bufferSizeInBytes

cpdef int zcsric02_bufferSize(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info):
    cdef int bufferSizeInBytes
    _setStream(get_handle_name(node))
    status = cusparseZcsric02_bufferSize(<Handle>handle, m, nnz, <const MatDescr>descrA, <cuDoubleComplex *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, &bufferSizeInBytes)
    check_status(status)
    return bufferSizeInBytes

cpdef scsric02_analysis(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info, size_t policy, size_t pBuffer):
    status = cusparseScsric02_analysis(<Handle>handle, m, nnz, <const MatDescr>descrA, <const float *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, <SolvePolicy>policy, <void *>pBuffer)
    check_status(status)

cpdef dcsric02_analysis(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info, size_t policy, size_t pBuffer):
    status = cusparseDcsric02_analysis(<Handle>handle, m, nnz, <const MatDescr>descrA, <const double *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, <SolvePolicy>policy, <void *>pBuffer)
    check_status(status)

cpdef ccsric02_analysis(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info, size_t policy, size_t pBuffer):
    status = cusparseCcsric02_analysis(<Handle>handle, m, nnz, <const MatDescr>descrA, <const cuComplex *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, <SolvePolicy>policy, <void *>pBuffer)
    check_status(status)

cpdef zcsric02_analysis(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info, size_t policy, size_t pBuffer):
    status = cusparseZcsric02_analysis(<Handle>handle, m, nnz, <const MatDescr>descrA, <const cuDoubleComplex *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, <SolvePolicy>policy, <void *>pBuffer)
    check_status(status)

cpdef scsric02(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA_valM, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info, size_t policy, size_t pBuffer):
    status = cusparseScsric02(<Handle>handle, m, nnz, <const MatDescr>descrA, <float *>csrSortedValA_valM, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, <SolvePolicy>policy, <void *>pBuffer)
    check_status(status)

cpdef dcsric02(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA_valM, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info, size_t policy, size_t pBuffer):
    status = cusparseDcsric02(<Handle>handle, m, nnz, <const MatDescr>descrA, <double *>csrSortedValA_valM, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, <SolvePolicy>policy, <void *>pBuffer)
    check_status(status)

cpdef ccsric02(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA_valM, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info, size_t policy, size_t pBuffer):
    status = cusparseCcsric02(<Handle>handle, m, nnz, <const MatDescr>descrA, <cuComplex *>csrSortedValA_valM, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, <SolvePolicy>policy, <void *>pBuffer)
    check_status(status)

cpdef zcsric02(intptr_t handle, int m, int nnz, size_t descrA, size_t csrSortedValA_valM, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t info, size_t policy, size_t pBuffer):
    status = cusparseZcsric02(<Handle>handle, m, nnz, <const MatDescr>descrA, <cuDoubleComplex *>csrSortedValA_valM, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <csric02Info_t>info, <SolvePolicy>policy, <void *>pBuffer)
    check_status(status)

cpdef size_t scsrgeam2_bufferSizeExt(intptr_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t beta, size_t descrB, int nnzB, size_t csrSortedValB, size_t csrSortedRowPtrB, size_t csrSortedColIndB, size_t descrC, size_t csrSortedValC, size_t csrSortedRowPtrC, size_t csrSortedColIndC):
    cdef size_t bufferSizeInBytes
    _setStream(get_handle_name(node))
    status = cusparseScsrgeam2_bufferSizeExt(<Handle>handle, m, n, <const float *>alpha, <const MatDescr>descrA, nnzA, <const float *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <const float *>beta, <const MatDescr>descrB, nnzB, <const float *>csrSortedValB, <const int *>csrSortedRowPtrB, <const int *>csrSortedColIndB, <const MatDescr>descrC, <const float *>csrSortedValC, <const int *>csrSortedRowPtrC, <const int *>csrSortedColIndC, &bufferSizeInBytes)
    check_status(status)
    return bufferSizeInBytes

cpdef size_t dcsrgeam2_bufferSizeExt(intptr_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t beta, size_t descrB, int nnzB, size_t csrSortedValB, size_t csrSortedRowPtrB, size_t csrSortedColIndB, size_t descrC, size_t csrSortedValC, size_t csrSortedRowPtrC, size_t csrSortedColIndC):
    cdef size_t bufferSizeInBytes
    _setStream(get_handle_name(node))
    status = cusparseDcsrgeam2_bufferSizeExt(<Handle>handle, m, n, <const double *>alpha, <const MatDescr>descrA, nnzA, <const double *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <const double *>beta, <const MatDescr>descrB, nnzB, <const double *>csrSortedValB, <const int *>csrSortedRowPtrB, <const int *>csrSortedColIndB, <const MatDescr>descrC, <const double *>csrSortedValC, <const int *>csrSortedRowPtrC, <const int *>csrSortedColIndC, &bufferSizeInBytes)
    check_status(status)
    return bufferSizeInBytes

cpdef size_t ccsrgeam2_bufferSizeExt(intptr_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t beta, size_t descrB, int nnzB, size_t csrSortedValB, size_t csrSortedRowPtrB, size_t csrSortedColIndB, size_t descrC, size_t csrSortedValC, size_t csrSortedRowPtrC, size_t csrSortedColIndC):
    cdef size_t bufferSizeInBytes
    _setStream(get_handle_name(node))
    status = cusparseCcsrgeam2_bufferSizeExt(<Handle>handle, m, n, <const cuComplex *>alpha, <const MatDescr>descrA, nnzA, <const cuComplex *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <const cuComplex *>beta, <const MatDescr>descrB, nnzB, <const cuComplex *>csrSortedValB, <const int *>csrSortedRowPtrB, <const int *>csrSortedColIndB, <const MatDescr>descrC, <const cuComplex *>csrSortedValC, <const int *>csrSortedRowPtrC, <const int *>csrSortedColIndC, &bufferSizeInBytes)
    check_status(status)
    return bufferSizeInBytes

cpdef size_t zcsrgeam2_bufferSizeExt(intptr_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t beta, size_t descrB, int nnzB, size_t csrSortedValB, size_t csrSortedRowPtrB, size_t csrSortedColIndB, size_t descrC, size_t csrSortedValC, size_t csrSortedRowPtrC, size_t csrSortedColIndC):
    cdef size_t bufferSizeInBytes
    _setStream(get_handle_name(node))
    status = cusparseZcsrgeam2_bufferSizeExt(<Handle>handle, m, n, <const cuDoubleComplex *>alpha, <const MatDescr>descrA, nnzA, <const cuDoubleComplex *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <const cuDoubleComplex *>beta, <const MatDescr>descrB, nnzB, <const cuDoubleComplex *>csrSortedValB, <const int *>csrSortedRowPtrB, <const int *>csrSortedColIndB, <const MatDescr>descrC, <const cuDoubleComplex *>csrSortedValC, <const int *>csrSortedRowPtrC, <const int *>csrSortedColIndC, &bufferSizeInBytes)
    check_status(status)
    return bufferSizeInBytes

cpdef scsrgeam2(intptr_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t beta, size_t descrB, int nnzB, size_t csrSortedValB, size_t csrSortedRowPtrB, size_t csrSortedColIndB, size_t descrC, size_t csrSortedValC, size_t csrSortedRowPtrC, size_t csrSortedColIndC, size_t pBuffer):
    _setStream(get_handle_name(node))
    status = cusparseScsrgeam2(<Handle>handle, m, n, <const float *>alpha, <const MatDescr>descrA, nnzA, <const float *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <const float *>beta, <const MatDescr>descrB, nnzB, <const float *>csrSortedValB, <const int *>csrSortedRowPtrB, <const int *>csrSortedColIndB, <const MatDescr>descrC, <float *>csrSortedValC, <int *>csrSortedRowPtrC, <int *>csrSortedColIndC, <void *>pBuffer)
    check_status(status)

cpdef dcsrgeam2(intptr_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t beta, size_t descrB, int nnzB, size_t csrSortedValB, size_t csrSortedRowPtrB, size_t csrSortedColIndB, size_t descrC, size_t csrSortedValC, size_t csrSortedRowPtrC, size_t csrSortedColIndC, size_t pBuffer):
    _setStream(get_handle_name(node))
    status = cusparseDcsrgeam2(<Handle>handle, m, n, <const double *>alpha, <const MatDescr>descrA, nnzA, <const double *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <const double *>beta, <const MatDescr>descrB, nnzB, <const double *>csrSortedValB, <const int *>csrSortedRowPtrB, <const int *>csrSortedColIndB, <const MatDescr>descrC, <double *>csrSortedValC, <int *>csrSortedRowPtrC, <int *>csrSortedColIndC, <void *>pBuffer)
    check_status(status)

cpdef ccsrgeam2(intptr_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t beta, size_t descrB, int nnzB, size_t csrSortedValB, size_t csrSortedRowPtrB, size_t csrSortedColIndB, size_t descrC, size_t csrSortedValC, size_t csrSortedRowPtrC, size_t csrSortedColIndC, size_t pBuffer):
    _setStream(get_handle_name(node))
    status = cusparseCcsrgeam2(<Handle>handle, m, n, <const cuComplex *>alpha, <const MatDescr>descrA, nnzA, <const cuComplex *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <const cuComplex *>beta, <const MatDescr>descrB, nnzB, <const cuComplex *>csrSortedValB, <const int *>csrSortedRowPtrB, <const int *>csrSortedColIndB, <const MatDescr>descrC, <cuComplex *>csrSortedValC, <int *>csrSortedRowPtrC, <int *>csrSortedColIndC, <void *>pBuffer)
    check_status(status)

cpdef zcsrgeam2(intptr_t handle, int m, int n, size_t alpha, size_t descrA, int nnzA, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA, size_t beta, size_t descrB, int nnzB, size_t csrSortedValB, size_t csrSortedRowPtrB, size_t csrSortedColIndB, size_t descrC, size_t csrSortedValC, size_t csrSortedRowPtrC, size_t csrSortedColIndC, size_t pBuffer):
    _setStream(get_handle_name(node))
    status = cusparseZcsrgeam2(<Handle>handle, m, n, <const cuDoubleComplex *>alpha, <const MatDescr>descrA, nnzA, <const cuDoubleComplex *>csrSortedValA, <const int *>csrSortedRowPtrA, <const int *>csrSortedColIndA, <const cuDoubleComplex *>beta, <const MatDescr>descrB, nnzB, <const cuDoubleComplex *>csrSortedValB, <const int *>csrSortedRowPtrB, <const int *>csrSortedColIndB, <const MatDescr>descrC, <cuDoubleComplex *>csrSortedValC, <int *>csrSortedRowPtrC, <int *>csrSortedColIndC, <void *>pBuffer)
    check_status(status)

cpdef sdense2csr(intptr_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRow, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA):
    _setStream(get_handle_name(node))
    status = cusparseSdense2csr(<Handle>handle, m, n, <const MatDescr>descrA, <const float *>A, lda, <const int *>nnzPerRow, <float *>csrSortedValA, <int *>csrSortedRowPtrA, <int *>csrSortedColIndA)
    check_status(status)

cpdef ddense2csr(intptr_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRow, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA):
    _setStream(get_handle_name(node))
    status = cusparseDdense2csr(<Handle>handle, m, n, <const MatDescr>descrA, <const double *>A, lda, <const int *>nnzPerRow, <double *>csrSortedValA, <int *>csrSortedRowPtrA, <int *>csrSortedColIndA)
    check_status(status)

cpdef cdense2csr(intptr_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRow, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA):
    _setStream(get_handle_name(node))
    status = cusparseCdense2csr(<Handle>handle, m, n, <const MatDescr>descrA, <const cuComplex *>A, lda, <const int *>nnzPerRow, <cuComplex *>csrSortedValA, <int *>csrSortedRowPtrA, <int *>csrSortedColIndA)
    check_status(status)

cpdef zdense2csr(intptr_t handle, int m, int n, size_t descrA, size_t A, int lda, size_t nnzPerRow, size_t csrSortedValA, size_t csrSortedRowPtrA, size_t csrSortedColIndA):
    _setStream(get_handle_name(node))
    status = cusparseZdense2csr(<Handle>handle, m, n, <const MatDescr>descrA, <const cuDoubleComplex *>A, lda, <const int *>nnzPerRow, <cuDoubleComplex *>csrSortedValA, <int *>csrSortedRowPtrA, <int *>csrSortedColIndA)
    check_status(status)

cpdef xcoo2csr(intptr_t handle, size_t cooRowInd, int nnz, int m, size_t csrSortedRowPtr, size_t idxBase):
    _setStream(get_handle_name(node))
    status = cusparseXcoo2csr(<Handle>handle, <const int *>cooRowInd, nnz, m, <int *>csrSortedRowPtr, <IndexBase>idxBase)
    check_status(status)

cpdef xcoosortByRow(intptr_t handle, int m, int n, int nnz, size_t cooRowsA, size_t cooColsA, size_t P, size_t pBuffer):
    _setStream(get_handle_name(node))
    status = cusparseXcoosortByRow(<Handle>handle, m, n, nnz, <int *>cooRowsA, <int *>cooColsA, <int *>P, <void *>pBuffer)
    check_status(status)

cpdef size_t createSpVec(int64_t size, int64_t nnz, size_t indices, size_t values, size_t idxType, size_t idxBase, cudaDataType valueType):
    cdef SpVecDescr spVecDescr
    status = cusparseCreateSpVec(&spVecDescr, size, nnz, <void *>indices, <void *>values, <IndexType>idxType, <IndexBase>idxBase, valueType)
    check_status(status)
    return <size_t>spVecDescr

